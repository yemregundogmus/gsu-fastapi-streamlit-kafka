version: '3.8'

services:
  fastapi:
    build: ./fastapi
    ports:
      - "8000:8000"
    volumes:
      - shared-data:/data
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==worker

  streamlit:
    build: ./streamlit
    ports:
      - "8501:8501"
    volumes:
      - shared-data:/data
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==worker

  kafka-consumer:
    build: ./kafka_consumer
    volumes:
      - shared-data:/data
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==worker

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==worker

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==worker

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '8080:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==worker

networks:
  app-network:
    driver: bridge

volumes:
  shared-data:
